#!/usr/bin/env ruby

# frozen_string_literal: true

require "active_support/core_ext/string/inflections"
require "date"
require "erb"
require "kramdown"
require "kramdown-parser-gfm"
# require "pry" # binding.pry

def path_exists!(path, path_name)
  raise "#{path_name} does not exist: '#{path}'" unless File.exist?(path)

  path
end

def md_to_html(markdown)
  Kramdown::Document.new(markdown, input: "GFM", hard_wrap: false).to_html
end

# Autoparses title, date, url slug, and html from supplied path of a markdown post
class Post
  attr_reader :title, :date, :slug, :content

  def initialize(markdown_path)
    contents = File.open(markdown_path).read

    raw_title, raw_date = contents.lines.first(2)

    @title   = raw_title.gsub("#", "").strip
    @date    = Date.parse(raw_date.gsub("*", "").strip)
    @slug    = "#{date}-#{title}".parameterize
    @content = md_to_html(contents)
  end

  # Sort comparison by date
  def <=>(other)
    date <=> other.date
  end
end

# Post directories
POST_SRCS_DIR = path_exists!("./post_srcs", "POST_SRCS_DIR")
POST_DIR      = path_exists!("./posts",     "POST_DIR")

# Generate posts
POSTS = Dir["#{POST_SRCS_DIR}/*.md"].map { |src| Post.new(src) }.sort.reverse
puts "Generated posts: #{POSTS.count} post(s)"

# Main template
MAIN_TEMPLATE = ERB.new(File.open("./template.html.erb").read)

# Home template templates
HOME_TEMPLATE_TITLE_TEMPLATE = "home | jai.moe"
HOME_TEMPLATE_MAIN_TEMPLATE = <<~'DOC'.strip
  <% posts.each do |post| %>
    <h2 class="post-link"><a href="<%= "/posts/#{post.slug}.html" %>"><%= post.title %></a></h2>
    <p class="post-date"><strong><%= post.date %></strong></p>
  <% end %>
DOC

# Post template templates
POST_TEMPLATE_TITLE_TEMPLATE = "<%= post.title %> | jai.moe"
POST_TEMPLATE_MAIN_TEMPLATE = "<%= post.content %>"

# 404 template templates
E404_TEMPLATE_TITLE_TEMPLATE = "404| jai.moe"
E404_TEMPLATE_MAIN_TEMPLATE = "<h1>404</h1><p><strong>Page not found</strong></p>"

# About template templates
ABOUT_TEMPLATE_TITLE_TEMPLATE = "About| jai.moe"
ABOUT_TEMPLATE_MAIN_TEMPLATE = "<h1>About</h1><p><strong>Under construction</strong></p>"

# Generate post template
POST_TEMPLATE = ERB.new(
  MAIN_TEMPLATE.result_with_hash(
    title_template: POST_TEMPLATE_TITLE_TEMPLATE,
    main_template: POST_TEMPLATE_MAIN_TEMPLATE
  )
)
puts "Generated post template"

# Generate home template
HOME_TEMPLATE = ERB.new(
  MAIN_TEMPLATE.result_with_hash(
    title_template: HOME_TEMPLATE_TITLE_TEMPLATE,
    main_template: HOME_TEMPLATE_MAIN_TEMPLATE
  )
)
puts "Generated home template"

# Render 404 page
File.new("./404.html", "w").write(
  MAIN_TEMPLATE.result_with_hash(
    title_template: E404_TEMPLATE_TITLE_TEMPLATE,
    main_template: E404_TEMPLATE_MAIN_TEMPLATE
  )
)
puts "Rendered 404 page: ./404.html"

# Render about page
File.new("./about.html", "w").write(
  MAIN_TEMPLATE.result_with_hash(
    title_template: ABOUT_TEMPLATE_TITLE_TEMPLATE,
    main_template: ABOUT_TEMPLATE_MAIN_TEMPLATE
  )
)
puts "Rendered about page: ./about.html"

# Render homepage
File.new("./index.html", "w").write(
  HOME_TEMPLATE.result_with_hash(posts: POSTS)
)
puts "Rendered home page: ./index.html"

# Render posts
POSTS.each do |post|
  file_path = "#{POST_DIR}/#{post.slug}.html"

  File.new(file_path, "w").write(
    POST_TEMPLATE.result_with_hash(post: post)
  )

  puts "Rendered post page: #{file_path}"
end
